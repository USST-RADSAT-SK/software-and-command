/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.4 */

#ifndef PB_RFILETRANSFER_PB_H_INCLUDED
#define PB_RFILETRANSFER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _image_type_t {
    image_type_t_FullResolution = 0,
    image_type_t_HalfResolution = 1,
    image_type_t_QuarterResolution = 2,
    image_type_t_Thumbnail = 3
} image_type_t;

/* Struct definitions */
typedef struct _antenna_telemetry {
    char dummy_field;
} antenna_telemetry;

typedef struct _battery_telemetry {
    char dummy_field;
} battery_telemetry;

typedef struct _eps_telemetry {
    char dummy_field;
} eps_telemetry;

typedef struct _camera_telemetry {
    uint32_t uptime;
} camera_telemetry;

typedef struct _component_error_report {
    uint32_t component;
    int32_t error;
} component_error_report;

typedef struct _dosimeter_board_data {
    float channelZero;
    float channelOne;
    float channelTwo;
    float channelThree;
    float channelFour;
    float channelFive;
    float channelSix;
    float channelSeven;
} dosimeter_board_data;

typedef struct _error_record {
    uint32_t timeRecorded;
    uint8_t count;
} error_record;

typedef struct _error_report_summary {
    uint8_t moduleErrorCount[29];
    uint8_t componentErrorCount[19];
} error_report_summary;

typedef PB_BYTES_ARRAY_T(200) image_packet_data_t;
typedef struct _image_packet {
    uint32_t id;
    image_type_t type;
    image_packet_data_t data;
} image_packet;

typedef struct _module_error_report {
    uint32_t module;
    int32_t error;
} module_error_report;

typedef struct _obc_telemetry {
    uint32_t mode;
    uint32_t uptime;
    uint32_t rtcTime;
    uint32_t rtcTemperature;
} obc_telemetry;

typedef struct _receiver_telemetry {
    float rxDoppler;
    float rxRssi;
    float busVoltage;
    float totalCurrent;
    float txCurrent;
    float rxCurrent;
    float powerAmplifierCurrent;
    float powerAmplifierTemperature;
    float boardTemperature;
    uint32_t uptime;
    uint32_t frames;
} receiver_telemetry;

typedef struct _transmitter_telemetry {
    float reflectedPower;
    float forwardPower;
    float busVoltage;
    float totalCurrent;
    float txCurrent;
    float rxCurrent;
    float powerAmplifierCurrent;
    float powerAmplifierTemperature;
    float boardTemperature;
    uint32_t uptime;
} transmitter_telemetry;

typedef struct _dosimeter_data {
    dosimeter_board_data boardOne;
    dosimeter_board_data boardTwo;
} dosimeter_data;

typedef struct _transceiver_telemetry {
    receiver_telemetry receiver;
    transmitter_telemetry transmitter;
} transceiver_telemetry;

typedef struct _file_transfer_message {
    pb_size_t which_message;
    union {
        obc_telemetry ObcTelemetry;
        transceiver_telemetry TransceiverTelemetry;
        camera_telemetry CameraTelemetry;
        eps_telemetry EpsTelemetry;
        battery_telemetry BatteryTelemetry;
        antenna_telemetry AntennaTelemetry;
        dosimeter_data DosimeterData;
        image_packet ImagePacket;
        module_error_report ModuleErrorReport;
        component_error_report ComponentErrorReport;
        error_report_summary ErrorReportSummary;
    };
} file_transfer_message;


/* Helper constants for enums */
#define _image_type_t_MIN image_type_t_FullResolution
#define _image_type_t_MAX image_type_t_Thumbnail
#define _image_type_t_ARRAYSIZE ((image_type_t)(image_type_t_Thumbnail+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define file_transfer_message_init_default       {0, {obc_telemetry_init_default}}
#define obc_telemetry_init_default               {0, 0, 0, 0}
#define receiver_telemetry_init_default          {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define transmitter_telemetry_init_default       {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define transceiver_telemetry_init_default       {receiver_telemetry_init_default, transmitter_telemetry_init_default}
#define camera_telemetry_init_default            {0}
#define eps_telemetry_init_default               {0}
#define battery_telemetry_init_default           {0}
#define antenna_telemetry_init_default           {0}
#define dosimeter_board_data_init_default        {0, 0, 0, 0, 0, 0, 0, 0}
#define dosimeter_data_init_default              {dosimeter_board_data_init_default, dosimeter_board_data_init_default}
#define image_packet_init_default                {0, _image_type_t_MIN, {0, {0}}}
#define module_error_report_init_default         {0, 0}
#define component_error_report_init_default      {0, 0}
#define error_record_init_default                {0, 0}
#define error_report_summary_init_default        {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define file_transfer_message_init_zero          {0, {obc_telemetry_init_zero}}
#define obc_telemetry_init_zero                  {0, 0, 0, 0}
#define receiver_telemetry_init_zero             {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define transmitter_telemetry_init_zero          {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define transceiver_telemetry_init_zero          {receiver_telemetry_init_zero, transmitter_telemetry_init_zero}
#define camera_telemetry_init_zero               {0}
#define eps_telemetry_init_zero                  {0}
#define battery_telemetry_init_zero              {0}
#define antenna_telemetry_init_zero              {0}
#define dosimeter_board_data_init_zero           {0, 0, 0, 0, 0, 0, 0, 0}
#define dosimeter_data_init_zero                 {dosimeter_board_data_init_zero, dosimeter_board_data_init_zero}
#define image_packet_init_zero                   {0, _image_type_t_MIN, {0, {0}}}
#define module_error_report_init_zero            {0, 0}
#define component_error_report_init_zero         {0, 0}
#define error_record_init_zero                   {0, 0}
#define error_report_summary_init_zero           {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}

/* Field tags (for use in manual encoding/decoding) */
#define camera_telemetry_uptime_tag              1
#define component_error_report_component_tag     1
#define component_error_report_error_tag         2
#define dosimeter_board_data_channelZero_tag     1
#define dosimeter_board_data_channelOne_tag      2
#define dosimeter_board_data_channelTwo_tag      3
#define dosimeter_board_data_channelThree_tag    4
#define dosimeter_board_data_channelFour_tag     5
#define dosimeter_board_data_channelFive_tag     6
#define dosimeter_board_data_channelSix_tag      7
#define dosimeter_board_data_channelSeven_tag    8
#define error_record_timeRecorded_tag            1
#define error_record_count_tag                   2
#define error_report_summary_moduleErrorCount_tag 1
#define error_report_summary_componentErrorCount_tag 2
#define image_packet_id_tag                      1
#define image_packet_type_tag                    2
#define image_packet_data_tag                    3
#define module_error_report_module_tag           1
#define module_error_report_error_tag            2
#define obc_telemetry_mode_tag                   1
#define obc_telemetry_uptime_tag                 2
#define obc_telemetry_rtcTime_tag                3
#define obc_telemetry_rtcTemperature_tag         4
#define receiver_telemetry_rxDoppler_tag         1
#define receiver_telemetry_rxRssi_tag            2
#define receiver_telemetry_busVoltage_tag        3
#define receiver_telemetry_totalCurrent_tag      4
#define receiver_telemetry_txCurrent_tag         5
#define receiver_telemetry_rxCurrent_tag         6
#define receiver_telemetry_powerAmplifierCurrent_tag 7
#define receiver_telemetry_powerAmplifierTemperature_tag 8
#define receiver_telemetry_boardTemperature_tag  9
#define receiver_telemetry_uptime_tag            10
#define receiver_telemetry_frames_tag            11
#define transmitter_telemetry_reflectedPower_tag 1
#define transmitter_telemetry_forwardPower_tag   2
#define transmitter_telemetry_busVoltage_tag     3
#define transmitter_telemetry_totalCurrent_tag   4
#define transmitter_telemetry_txCurrent_tag      5
#define transmitter_telemetry_rxCurrent_tag      6
#define transmitter_telemetry_powerAmplifierCurrent_tag 7
#define transmitter_telemetry_powerAmplifierTemperature_tag 8
#define transmitter_telemetry_boardTemperature_tag 9
#define transmitter_telemetry_uptime_tag         10
#define dosimeter_data_boardOne_tag              1
#define dosimeter_data_boardTwo_tag              2
#define transceiver_telemetry_receiver_tag       1
#define transceiver_telemetry_transmitter_tag    2
#define file_transfer_message_ObcTelemetry_tag   1
#define file_transfer_message_TransceiverTelemetry_tag 2
#define file_transfer_message_CameraTelemetry_tag 3
#define file_transfer_message_EpsTelemetry_tag   4
#define file_transfer_message_BatteryTelemetry_tag 5
#define file_transfer_message_AntennaTelemetry_tag 6
#define file_transfer_message_DosimeterData_tag  7
#define file_transfer_message_ImagePacket_tag    8
#define file_transfer_message_ModuleErrorReport_tag 9
#define file_transfer_message_ComponentErrorReport_tag 10
#define file_transfer_message_ErrorReportSummary_tag 11

/* Struct field encoding specification for nanopb */
#define file_transfer_message_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,ObcTelemetry,ObcTelemetry),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,TransceiverTelemetry,TransceiverTelemetry),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,CameraTelemetry,CameraTelemetry),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,EpsTelemetry,EpsTelemetry),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,BatteryTelemetry,BatteryTelemetry),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,AntennaTelemetry,AntennaTelemetry),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,DosimeterData,DosimeterData),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,ImagePacket,ImagePacket),   8) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,ModuleErrorReport,ModuleErrorReport),   9) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,ComponentErrorReport,ComponentErrorReport),  10) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,ErrorReportSummary,ErrorReportSummary),  11)
#define file_transfer_message_CALLBACK NULL
#define file_transfer_message_DEFAULT NULL
#define file_transfer_message_message_ObcTelemetry_MSGTYPE obc_telemetry
#define file_transfer_message_message_TransceiverTelemetry_MSGTYPE transceiver_telemetry
#define file_transfer_message_message_CameraTelemetry_MSGTYPE camera_telemetry
#define file_transfer_message_message_EpsTelemetry_MSGTYPE eps_telemetry
#define file_transfer_message_message_BatteryTelemetry_MSGTYPE battery_telemetry
#define file_transfer_message_message_AntennaTelemetry_MSGTYPE antenna_telemetry
#define file_transfer_message_message_DosimeterData_MSGTYPE dosimeter_data
#define file_transfer_message_message_ImagePacket_MSGTYPE image_packet
#define file_transfer_message_message_ModuleErrorReport_MSGTYPE module_error_report
#define file_transfer_message_message_ComponentErrorReport_MSGTYPE component_error_report
#define file_transfer_message_message_ErrorReportSummary_MSGTYPE error_report_summary

#define obc_telemetry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   mode,              1) \
X(a, STATIC,   SINGULAR, UINT32,   uptime,            2) \
X(a, STATIC,   SINGULAR, UINT32,   rtcTime,           3) \
X(a, STATIC,   SINGULAR, UINT32,   rtcTemperature,    4)
#define obc_telemetry_CALLBACK NULL
#define obc_telemetry_DEFAULT NULL

#define receiver_telemetry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    rxDoppler,         1) \
X(a, STATIC,   SINGULAR, FLOAT,    rxRssi,            2) \
X(a, STATIC,   SINGULAR, FLOAT,    busVoltage,        3) \
X(a, STATIC,   SINGULAR, FLOAT,    totalCurrent,      4) \
X(a, STATIC,   SINGULAR, FLOAT,    txCurrent,         5) \
X(a, STATIC,   SINGULAR, FLOAT,    rxCurrent,         6) \
X(a, STATIC,   SINGULAR, FLOAT,    powerAmplifierCurrent,   7) \
X(a, STATIC,   SINGULAR, FLOAT,    powerAmplifierTemperature,   8) \
X(a, STATIC,   SINGULAR, FLOAT,    boardTemperature,   9) \
X(a, STATIC,   SINGULAR, UINT32,   uptime,           10) \
X(a, STATIC,   SINGULAR, UINT32,   frames,           11)
#define receiver_telemetry_CALLBACK NULL
#define receiver_telemetry_DEFAULT NULL

#define transmitter_telemetry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    reflectedPower,    1) \
X(a, STATIC,   SINGULAR, FLOAT,    forwardPower,      2) \
X(a, STATIC,   SINGULAR, FLOAT,    busVoltage,        3) \
X(a, STATIC,   SINGULAR, FLOAT,    totalCurrent,      4) \
X(a, STATIC,   SINGULAR, FLOAT,    txCurrent,         5) \
X(a, STATIC,   SINGULAR, FLOAT,    rxCurrent,         6) \
X(a, STATIC,   SINGULAR, FLOAT,    powerAmplifierCurrent,   7) \
X(a, STATIC,   SINGULAR, FLOAT,    powerAmplifierTemperature,   8) \
X(a, STATIC,   SINGULAR, FLOAT,    boardTemperature,   9) \
X(a, STATIC,   SINGULAR, UINT32,   uptime,           10)
#define transmitter_telemetry_CALLBACK NULL
#define transmitter_telemetry_DEFAULT NULL

#define transceiver_telemetry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, MESSAGE,  receiver,          1) \
X(a, STATIC,   SINGULAR, MESSAGE,  transmitter,       2)
#define transceiver_telemetry_CALLBACK NULL
#define transceiver_telemetry_DEFAULT NULL
#define transceiver_telemetry_receiver_MSGTYPE receiver_telemetry
#define transceiver_telemetry_transmitter_MSGTYPE transmitter_telemetry

#define camera_telemetry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   uptime,            1)
#define camera_telemetry_CALLBACK NULL
#define camera_telemetry_DEFAULT NULL

#define eps_telemetry_FIELDLIST(X, a) \

#define eps_telemetry_CALLBACK NULL
#define eps_telemetry_DEFAULT NULL

#define battery_telemetry_FIELDLIST(X, a) \

#define battery_telemetry_CALLBACK NULL
#define battery_telemetry_DEFAULT NULL

#define antenna_telemetry_FIELDLIST(X, a) \

#define antenna_telemetry_CALLBACK NULL
#define antenna_telemetry_DEFAULT NULL

#define dosimeter_board_data_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    channelZero,       1) \
X(a, STATIC,   SINGULAR, FLOAT,    channelOne,        2) \
X(a, STATIC,   SINGULAR, FLOAT,    channelTwo,        3) \
X(a, STATIC,   SINGULAR, FLOAT,    channelThree,      4) \
X(a, STATIC,   SINGULAR, FLOAT,    channelFour,       5) \
X(a, STATIC,   SINGULAR, FLOAT,    channelFive,       6) \
X(a, STATIC,   SINGULAR, FLOAT,    channelSix,        7) \
X(a, STATIC,   SINGULAR, FLOAT,    channelSeven,      8)
#define dosimeter_board_data_CALLBACK NULL
#define dosimeter_board_data_DEFAULT NULL

#define dosimeter_data_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, MESSAGE,  boardOne,          1) \
X(a, STATIC,   SINGULAR, MESSAGE,  boardTwo,          2)
#define dosimeter_data_CALLBACK NULL
#define dosimeter_data_DEFAULT NULL
#define dosimeter_data_boardOne_MSGTYPE dosimeter_board_data
#define dosimeter_data_boardTwo_MSGTYPE dosimeter_board_data

#define image_packet_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   id,                1) \
X(a, STATIC,   SINGULAR, UENUM,    type,              2) \
X(a, STATIC,   SINGULAR, BYTES,    data,              3)
#define image_packet_CALLBACK NULL
#define image_packet_DEFAULT NULL

#define module_error_report_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   module,            1) \
X(a, STATIC,   SINGULAR, INT32,    error,             2)
#define module_error_report_CALLBACK NULL
#define module_error_report_DEFAULT NULL

#define component_error_report_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   component,         1) \
X(a, STATIC,   SINGULAR, INT32,    error,             2)
#define component_error_report_CALLBACK NULL
#define component_error_report_DEFAULT NULL

#define error_record_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   timeRecorded,      1) \
X(a, STATIC,   SINGULAR, UINT32,   count,             2)
#define error_record_CALLBACK NULL
#define error_record_DEFAULT NULL

#define error_report_summary_FIELDLIST(X, a) \
X(a, STATIC,   FIXARRAY, UINT32,   moduleErrorCount,   1) \
X(a, STATIC,   FIXARRAY, UINT32,   componentErrorCount,   2)
#define error_report_summary_CALLBACK NULL
#define error_report_summary_DEFAULT NULL

extern const pb_msgdesc_t file_transfer_message_msg;
extern const pb_msgdesc_t obc_telemetry_msg;
extern const pb_msgdesc_t receiver_telemetry_msg;
extern const pb_msgdesc_t transmitter_telemetry_msg;
extern const pb_msgdesc_t transceiver_telemetry_msg;
extern const pb_msgdesc_t camera_telemetry_msg;
extern const pb_msgdesc_t eps_telemetry_msg;
extern const pb_msgdesc_t battery_telemetry_msg;
extern const pb_msgdesc_t antenna_telemetry_msg;
extern const pb_msgdesc_t dosimeter_board_data_msg;
extern const pb_msgdesc_t dosimeter_data_msg;
extern const pb_msgdesc_t image_packet_msg;
extern const pb_msgdesc_t module_error_report_msg;
extern const pb_msgdesc_t component_error_report_msg;
extern const pb_msgdesc_t error_record_msg;
extern const pb_msgdesc_t error_report_summary_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define file_transfer_message_fields &file_transfer_message_msg
#define obc_telemetry_fields &obc_telemetry_msg
#define receiver_telemetry_fields &receiver_telemetry_msg
#define transmitter_telemetry_fields &transmitter_telemetry_msg
#define transceiver_telemetry_fields &transceiver_telemetry_msg
#define camera_telemetry_fields &camera_telemetry_msg
#define eps_telemetry_fields &eps_telemetry_msg
#define battery_telemetry_fields &battery_telemetry_msg
#define antenna_telemetry_fields &antenna_telemetry_msg
#define dosimeter_board_data_fields &dosimeter_board_data_msg
#define dosimeter_data_fields &dosimeter_data_msg
#define image_packet_fields &image_packet_msg
#define module_error_report_fields &module_error_report_msg
#define component_error_report_fields &component_error_report_msg
#define error_record_fields &error_record_msg
#define error_report_summary_fields &error_report_summary_msg

/* Maximum encoded size of messages (where known) */
#define file_transfer_message_size               214
#define obc_telemetry_size                       24
#define receiver_telemetry_size                  57
#define transmitter_telemetry_size               51
#define transceiver_telemetry_size               112
#define camera_telemetry_size                    6
#define eps_telemetry_size                       0
#define battery_telemetry_size                   0
#define antenna_telemetry_size                   0
#define dosimeter_board_data_size                40
#define dosimeter_data_size                      84
#define image_packet_size                        211
#define module_error_report_size                 17
#define component_error_report_size              17
#define error_record_size                        9
#define error_report_summary_size                144

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
