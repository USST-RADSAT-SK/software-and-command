/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.4 */

#ifndef PB_PROTO_FILETRANSFER_PB_H_INCLUDED
#define PB_PROTO_FILETRANSFER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _transferPacket {
    int32_t packetType;
    int32_t packetNumber;
    pb_byte_t data[200];
} transferPacket;

typedef struct _transferResponse {
    int32_t packetType;
    int32_t packetNumber;
    int32_t responseType;
} transferResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define transferResponse_init_default            {0, 0, 0}
#define transferPacket_init_default              {0, 0, {0}}
#define transferResponse_init_zero               {0, 0, 0}
#define transferPacket_init_zero                 {0, 0, {0}}

/* Field tags (for use in manual encoding/decoding) */
#define transferPacket_packetType_tag            1
#define transferPacket_packetNumber_tag          2
#define transferPacket_data_tag                  3
#define transferResponse_packetType_tag          1
#define transferResponse_packetNumber_tag        2
#define transferResponse_responseType_tag        3

/* Struct field encoding specification for nanopb */
#define transferResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    packetType,        1) \
X(a, STATIC,   SINGULAR, INT32,    packetNumber,      2) \
X(a, STATIC,   SINGULAR, INT32,    responseType,      3)
#define transferResponse_CALLBACK NULL
#define transferResponse_DEFAULT NULL

#define transferPacket_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    packetType,        1) \
X(a, STATIC,   SINGULAR, INT32,    packetNumber,      2) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, data,              3)
#define transferPacket_CALLBACK NULL
#define transferPacket_DEFAULT NULL

extern const pb_msgdesc_t transferResponse_msg;
extern const pb_msgdesc_t transferPacket_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define transferResponse_fields &transferResponse_msg
#define transferPacket_fields &transferPacket_msg

/* Maximum encoded size of messages (where known) */
#define transferResponse_size                    33
#define transferPacket_size                      225

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
