/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.4 */

#ifndef PB_RFILETRANSFER_PB_H_INCLUDED
#define PB_RFILETRANSFER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _ImagePacket_image_type_t {
    ImagePacket_image_type_t_fullResolution = 0,
    ImagePacket_image_type_t_halfResolution = 1,
    ImagePacket_image_type_t_quarterResolution = 2,
    ImagePacket_image_type_t_thumbnail = 3
} ImagePacket_image_type_t;

/* Struct definitions */
typedef struct _AntennaTelemetry {
    char dummy_field;
} AntennaTelemetry;

typedef struct _BatteryTelemetry {
    char dummy_field;
} BatteryTelemetry;

typedef struct _EpsTelemetry {
    char dummy_field;
} EpsTelemetry;

typedef struct _CameraTelemetry {
    int32_t upTime;
} CameraTelemetry;

typedef struct _DosimeterBoardData {
    int32_t voltageChannelZero;
    int32_t voltageChannelOne;
    int32_t voltageChannelTwo;
    int32_t voltageChannelThree;
    int32_t voltageChannelFour;
    int32_t voltageChannelFive;
    int32_t voltageChannelSix;
    int32_t voltageChannelSeven;
} DosimeterBoardData;

typedef PB_BYTES_ARRAY_T(200) ImagePacket_data_t;
typedef struct _ImagePacket {
    int32_t id;
    ImagePacket_image_type_t type;
    ImagePacket_data_t data;
} ImagePacket;

typedef struct _ObcTelemetry {
    int32_t mode;
    int32_t uptime;
    int32_t rtcTime;
    int32_t rtcTemperature;
} ObcTelemetry;

typedef struct _receiverTelemetry {
    float rx_doppler;
    float rx_rssi;
    float bus_volt;
    float vutotal_curr;
    float vutx_curr;
    float vurx_curr;
    float vupa_curr;
    float pa_temp;
    float board_temp;
    int32_t uptime;
    int32_t frames;
} receiverTelemetry;

typedef struct _transmitterTelemetry {
    float tx_reflpwr;
    float tx_fwrdpwr;
    float bus_volt;
    float vutotal_curr;
    float vutx_curr;
    float vurx_curr;
    float vupa_curr;
    float pa_temp;
    float board_temp;
    int32_t uptime;
} transmitterTelemetry;

typedef struct _DosimeterData {
    bool has_boardOne;
    DosimeterBoardData boardOne;
    bool has_boardTwo;
    DosimeterBoardData boardTwo;
} DosimeterData;

typedef struct _TransceiverTelemetry {
    bool has_transmitter;
    transmitterTelemetry transmitter;
    bool has_receiver;
    receiverTelemetry receiver;
} TransceiverTelemetry;

typedef struct _FileTransferMessage {
    pb_size_t which_message;
    union {
        ObcTelemetry obcTelemetry;
        TransceiverTelemetry transceiverTelemetry;
        CameraTelemetry cameraTelemetry;
        EpsTelemetry epsTelemetry;
        BatteryTelemetry batteryTelemetry;
        AntennaTelemetry antennaTelemetry;
        DosimeterData dosimeterData;
        ImagePacket imagePacket;
    };
} FileTransferMessage;


/* Helper constants for enums */
#define _ImagePacket_image_type_t_MIN ImagePacket_image_type_t_fullResolution
#define _ImagePacket_image_type_t_MAX ImagePacket_image_type_t_thumbnail
#define _ImagePacket_image_type_t_ARRAYSIZE ((ImagePacket_image_type_t)(ImagePacket_image_type_t_thumbnail+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define FileTransferMessage_init_default         {0, {ObcTelemetry_init_default}}
#define ObcTelemetry_init_default                {0, 0, 0, 0}
#define transmitterTelemetry_init_default        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define receiverTelemetry_init_default           {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define TransceiverTelemetry_init_default        {false, transmitterTelemetry_init_default, false, receiverTelemetry_init_default}
#define CameraTelemetry_init_default             {0}
#define EpsTelemetry_init_default                {0}
#define BatteryTelemetry_init_default            {0}
#define AntennaTelemetry_init_default            {0}
#define DosimeterBoardData_init_default          {0, 0, 0, 0, 0, 0, 0, 0}
#define DosimeterData_init_default               {false, DosimeterBoardData_init_default, false, DosimeterBoardData_init_default}
#define ImagePacket_init_default                 {0, _ImagePacket_image_type_t_MIN, {0, {0}}}
#define FileTransferMessage_init_zero            {0, {ObcTelemetry_init_zero}}
#define ObcTelemetry_init_zero                   {0, 0, 0, 0}
#define transmitterTelemetry_init_zero           {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define receiverTelemetry_init_zero              {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define TransceiverTelemetry_init_zero           {false, transmitterTelemetry_init_zero, false, receiverTelemetry_init_zero}
#define CameraTelemetry_init_zero                {0}
#define EpsTelemetry_init_zero                   {0}
#define BatteryTelemetry_init_zero               {0}
#define AntennaTelemetry_init_zero               {0}
#define DosimeterBoardData_init_zero             {0, 0, 0, 0, 0, 0, 0, 0}
#define DosimeterData_init_zero                  {false, DosimeterBoardData_init_zero, false, DosimeterBoardData_init_zero}
#define ImagePacket_init_zero                    {0, _ImagePacket_image_type_t_MIN, {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define CameraTelemetry_upTime_tag               1
#define DosimeterBoardData_voltageChannelZero_tag 1
#define DosimeterBoardData_voltageChannelOne_tag 2
#define DosimeterBoardData_voltageChannelTwo_tag 3
#define DosimeterBoardData_voltageChannelThree_tag 4
#define DosimeterBoardData_voltageChannelFour_tag 5
#define DosimeterBoardData_voltageChannelFive_tag 6
#define DosimeterBoardData_voltageChannelSix_tag 7
#define DosimeterBoardData_voltageChannelSeven_tag 8
#define ImagePacket_id_tag                       1
#define ImagePacket_type_tag                     2
#define ImagePacket_data_tag                     3
#define ObcTelemetry_mode_tag                    1
#define ObcTelemetry_uptime_tag                  2
#define ObcTelemetry_rtcTime_tag                 3
#define ObcTelemetry_rtcTemperature_tag          4
#define receiverTelemetry_rx_doppler_tag         1
#define receiverTelemetry_rx_rssi_tag            2
#define receiverTelemetry_bus_volt_tag           3
#define receiverTelemetry_vutotal_curr_tag       4
#define receiverTelemetry_vutx_curr_tag          5
#define receiverTelemetry_vurx_curr_tag          6
#define receiverTelemetry_vupa_curr_tag          7
#define receiverTelemetry_pa_temp_tag            8
#define receiverTelemetry_board_temp_tag         9
#define receiverTelemetry_uptime_tag             10
#define receiverTelemetry_frames_tag             11
#define transmitterTelemetry_tx_reflpwr_tag      1
#define transmitterTelemetry_tx_fwrdpwr_tag      2
#define transmitterTelemetry_bus_volt_tag        3
#define transmitterTelemetry_vutotal_curr_tag    4
#define transmitterTelemetry_vutx_curr_tag       5
#define transmitterTelemetry_vurx_curr_tag       6
#define transmitterTelemetry_vupa_curr_tag       7
#define transmitterTelemetry_pa_temp_tag         8
#define transmitterTelemetry_board_temp_tag      9
#define transmitterTelemetry_uptime_tag          10
#define DosimeterData_boardOne_tag               1
#define DosimeterData_boardTwo_tag               2
#define TransceiverTelemetry_transmitter_tag     1
#define TransceiverTelemetry_receiver_tag        2
#define FileTransferMessage_obcTelemetry_tag     1
#define FileTransferMessage_transceiverTelemetry_tag 2
#define FileTransferMessage_cameraTelemetry_tag  3
#define FileTransferMessage_epsTelemetry_tag     4
#define FileTransferMessage_batteryTelemetry_tag 5
#define FileTransferMessage_antennaTelemetry_tag 6
#define FileTransferMessage_dosimeterData_tag    7
#define FileTransferMessage_imagePacket_tag      8

/* Struct field encoding specification for nanopb */
#define FileTransferMessage_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,obcTelemetry,obcTelemetry),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,transceiverTelemetry,transceiverTelemetry),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,cameraTelemetry,cameraTelemetry),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,epsTelemetry,epsTelemetry),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,batteryTelemetry,batteryTelemetry),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,antennaTelemetry,antennaTelemetry),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,dosimeterData,dosimeterData),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,imagePacket,imagePacket),   8)
#define FileTransferMessage_CALLBACK NULL
#define FileTransferMessage_DEFAULT NULL
#define FileTransferMessage_message_obcTelemetry_MSGTYPE ObcTelemetry
#define FileTransferMessage_message_transceiverTelemetry_MSGTYPE TransceiverTelemetry
#define FileTransferMessage_message_cameraTelemetry_MSGTYPE CameraTelemetry
#define FileTransferMessage_message_epsTelemetry_MSGTYPE EpsTelemetry
#define FileTransferMessage_message_batteryTelemetry_MSGTYPE BatteryTelemetry
#define FileTransferMessage_message_antennaTelemetry_MSGTYPE AntennaTelemetry
#define FileTransferMessage_message_dosimeterData_MSGTYPE DosimeterData
#define FileTransferMessage_message_imagePacket_MSGTYPE ImagePacket

#define ObcTelemetry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    mode,              1) \
X(a, STATIC,   SINGULAR, INT32,    uptime,            2) \
X(a, STATIC,   SINGULAR, INT32,    rtcTime,           3) \
X(a, STATIC,   SINGULAR, INT32,    rtcTemperature,    4)
#define ObcTelemetry_CALLBACK NULL
#define ObcTelemetry_DEFAULT NULL

#define transmitterTelemetry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    tx_reflpwr,        1) \
X(a, STATIC,   SINGULAR, FLOAT,    tx_fwrdpwr,        2) \
X(a, STATIC,   SINGULAR, FLOAT,    bus_volt,          3) \
X(a, STATIC,   SINGULAR, FLOAT,    vutotal_curr,      4) \
X(a, STATIC,   SINGULAR, FLOAT,    vutx_curr,         5) \
X(a, STATIC,   SINGULAR, FLOAT,    vurx_curr,         6) \
X(a, STATIC,   SINGULAR, FLOAT,    vupa_curr,         7) \
X(a, STATIC,   SINGULAR, FLOAT,    pa_temp,           8) \
X(a, STATIC,   SINGULAR, FLOAT,    board_temp,        9) \
X(a, STATIC,   SINGULAR, INT32,    uptime,           10)
#define transmitterTelemetry_CALLBACK NULL
#define transmitterTelemetry_DEFAULT NULL

#define receiverTelemetry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    rx_doppler,        1) \
X(a, STATIC,   SINGULAR, FLOAT,    rx_rssi,           2) \
X(a, STATIC,   SINGULAR, FLOAT,    bus_volt,          3) \
X(a, STATIC,   SINGULAR, FLOAT,    vutotal_curr,      4) \
X(a, STATIC,   SINGULAR, FLOAT,    vutx_curr,         5) \
X(a, STATIC,   SINGULAR, FLOAT,    vurx_curr,         6) \
X(a, STATIC,   SINGULAR, FLOAT,    vupa_curr,         7) \
X(a, STATIC,   SINGULAR, FLOAT,    pa_temp,           8) \
X(a, STATIC,   SINGULAR, FLOAT,    board_temp,        9) \
X(a, STATIC,   SINGULAR, INT32,    uptime,           10) \
X(a, STATIC,   SINGULAR, INT32,    frames,           11)
#define receiverTelemetry_CALLBACK NULL
#define receiverTelemetry_DEFAULT NULL

#define TransceiverTelemetry_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  transmitter,       1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  receiver,          2)
#define TransceiverTelemetry_CALLBACK NULL
#define TransceiverTelemetry_DEFAULT NULL
#define TransceiverTelemetry_transmitter_MSGTYPE transmitterTelemetry
#define TransceiverTelemetry_receiver_MSGTYPE receiverTelemetry

#define CameraTelemetry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    upTime,            1)
#define CameraTelemetry_CALLBACK NULL
#define CameraTelemetry_DEFAULT NULL

#define EpsTelemetry_FIELDLIST(X, a) \

#define EpsTelemetry_CALLBACK NULL
#define EpsTelemetry_DEFAULT NULL

#define BatteryTelemetry_FIELDLIST(X, a) \

#define BatteryTelemetry_CALLBACK NULL
#define BatteryTelemetry_DEFAULT NULL

#define AntennaTelemetry_FIELDLIST(X, a) \

#define AntennaTelemetry_CALLBACK NULL
#define AntennaTelemetry_DEFAULT NULL

#define DosimeterBoardData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    voltageChannelZero,   1) \
X(a, STATIC,   SINGULAR, INT32,    voltageChannelOne,   2) \
X(a, STATIC,   SINGULAR, INT32,    voltageChannelTwo,   3) \
X(a, STATIC,   SINGULAR, INT32,    voltageChannelThree,   4) \
X(a, STATIC,   SINGULAR, INT32,    voltageChannelFour,   5) \
X(a, STATIC,   SINGULAR, INT32,    voltageChannelFive,   6) \
X(a, STATIC,   SINGULAR, INT32,    voltageChannelSix,   7) \
X(a, STATIC,   SINGULAR, INT32,    voltageChannelSeven,   8)
#define DosimeterBoardData_CALLBACK NULL
#define DosimeterBoardData_DEFAULT NULL

#define DosimeterData_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  boardOne,          1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  boardTwo,          2)
#define DosimeterData_CALLBACK NULL
#define DosimeterData_DEFAULT NULL
#define DosimeterData_boardOne_MSGTYPE DosimeterBoardData
#define DosimeterData_boardTwo_MSGTYPE DosimeterBoardData

#define ImagePacket_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    id,                1) \
X(a, STATIC,   SINGULAR, UENUM,    type,              2) \
X(a, STATIC,   SINGULAR, BYTES,    data,              3)
#define ImagePacket_CALLBACK NULL
#define ImagePacket_DEFAULT NULL

extern const pb_msgdesc_t FileTransferMessage_msg;
extern const pb_msgdesc_t ObcTelemetry_msg;
extern const pb_msgdesc_t transmitterTelemetry_msg;
extern const pb_msgdesc_t receiverTelemetry_msg;
extern const pb_msgdesc_t TransceiverTelemetry_msg;
extern const pb_msgdesc_t CameraTelemetry_msg;
extern const pb_msgdesc_t EpsTelemetry_msg;
extern const pb_msgdesc_t BatteryTelemetry_msg;
extern const pb_msgdesc_t AntennaTelemetry_msg;
extern const pb_msgdesc_t DosimeterBoardData_msg;
extern const pb_msgdesc_t DosimeterData_msg;
extern const pb_msgdesc_t ImagePacket_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define FileTransferMessage_fields &FileTransferMessage_msg
#define ObcTelemetry_fields &ObcTelemetry_msg
#define transmitterTelemetry_fields &transmitterTelemetry_msg
#define receiverTelemetry_fields &receiverTelemetry_msg
#define TransceiverTelemetry_fields &TransceiverTelemetry_msg
#define CameraTelemetry_fields &CameraTelemetry_msg
#define EpsTelemetry_fields &EpsTelemetry_msg
#define BatteryTelemetry_fields &BatteryTelemetry_msg
#define AntennaTelemetry_fields &AntennaTelemetry_msg
#define DosimeterBoardData_fields &DosimeterBoardData_msg
#define DosimeterData_fields &DosimeterData_msg
#define ImagePacket_fields &ImagePacket_msg

/* Maximum encoded size of messages (where known) */
#define FileTransferMessage_size                 219
#define ObcTelemetry_size                        44
#define transmitterTelemetry_size                56
#define receiverTelemetry_size                   67
#define TransceiverTelemetry_size                127
#define CameraTelemetry_size                     11
#define EpsTelemetry_size                        0
#define BatteryTelemetry_size                    0
#define AntennaTelemetry_size                    0
#define DosimeterBoardData_size                  88
#define DosimeterData_size                       180
#define ImagePacket_size                         216

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
