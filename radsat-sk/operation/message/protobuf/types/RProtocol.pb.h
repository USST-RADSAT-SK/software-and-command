/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.4 */

#ifndef PB_RPROTOCOL_PB_H_INCLUDED
#define PB_RPROTOCOL_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _ack {
    uint32_t resp;
} ack;

typedef struct _nack {
    uint32_t resp;
} nack;

typedef struct _protocol_message {
    pb_size_t which_message;
    union {
        ack Ack;
        nack Nack;
    };
} protocol_message;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define protocol_message_init_default            {0, {ack_init_default}}
#define ack_init_default                         {0}
#define nack_init_default                        {0}
#define protocol_message_init_zero               {0, {ack_init_zero}}
#define ack_init_zero                            {0}
#define nack_init_zero                           {0}

/* Field tags (for use in manual encoding/decoding) */
#define ack_resp_tag                             1
#define nack_resp_tag                            1
#define protocol_message_Ack_tag                 1
#define protocol_message_Nack_tag                2

/* Struct field encoding specification for nanopb */
#define protocol_message_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,Ack,Ack),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,Nack,Nack),   2)
#define protocol_message_CALLBACK NULL
#define protocol_message_DEFAULT NULL
#define protocol_message_message_Ack_MSGTYPE ack
#define protocol_message_message_Nack_MSGTYPE nack

#define ack_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   resp,              1)
#define ack_CALLBACK NULL
#define ack_DEFAULT NULL

#define nack_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   resp,              1)
#define nack_CALLBACK NULL
#define nack_DEFAULT NULL

extern const pb_msgdesc_t protocol_message_msg;
extern const pb_msgdesc_t ack_msg;
extern const pb_msgdesc_t nack_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define protocol_message_fields &protocol_message_msg
#define ack_fields &ack_msg
#define nack_fields &nack_msg

/* Maximum encoded size of messages (where known) */
#define protocol_message_size                    8
#define ack_size                                 6
#define nack_size                                6

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
