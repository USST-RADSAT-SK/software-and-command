/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.4 */

#ifndef PB_RRADSAT_PB_H_INCLUDED
#define PB_RRADSAT_PB_H_INCLUDED
#include <pb.h>
#include <RFileTransfer.pb.h>
#include <RTelecommands.pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _RadsatMessage {
    pb_size_t which_topic;
    union {
        FileTransferMessage fileTransferMessage;
        TelecommandMessage telecommandMessage;
    };
} RadsatMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define RadsatMessage_init_default               {0, {FileTransferMessage_init_default}}
#define RadsatMessage_init_zero                  {0, {FileTransferMessage_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define RadsatMessage_fileTransferMessage_tag    4
#define RadsatMessage_telecommandMessage_tag     5

/* Struct field encoding specification for nanopb */
#define RadsatMessage_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (topic,fileTransferMessage,fileTransferMessage),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (topic,telecommandMessage,telecommandMessage),   5)
#define RadsatMessage_CALLBACK NULL
#define RadsatMessage_DEFAULT NULL
#define RadsatMessage_topic_fileTransferMessage_MSGTYPE FileTransferMessage
#define RadsatMessage_topic_telecommandMessage_MSGTYPE TelecommandMessage

extern const pb_msgdesc_t RadsatMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define RadsatMessage_fields &RadsatMessage_msg

/* Maximum encoded size of messages (where known) */
#define RadsatMessage_size                       222

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
