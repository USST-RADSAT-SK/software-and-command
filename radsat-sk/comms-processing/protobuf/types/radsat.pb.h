/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.4 */

#ifndef PB_RADSAT_PB_H_INCLUDED
#define PB_RADSAT_PB_H_INCLUDED
#include <pb.h>
#include <fileTransfer.pb.h>
#include <telecommands.pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _radsatMessage {
    int32_t crc;
    pb_size_t which_topic;
    union {
        fileTransferMessage FileTransferMessage;
        telecommandMessage TelecommandMessage;
    } topic;
} radsatMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define radsatMessage_init_default               {0, 0, {fileTransferMessage_init_default}}
#define radsatMessage_init_zero                  {0, 0, {fileTransferMessage_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define radsatMessage_crc_tag                    1
#define radsatMessage_FileTransferMessage_tag    4
#define radsatMessage_TelecommandMessage_tag     5

/* Struct field encoding specification for nanopb */
#define radsatMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    crc,               1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (topic,FileTransferMessage,topic.FileTransferMessage),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (topic,TelecommandMessage,topic.TelecommandMessage),   5)
#define radsatMessage_CALLBACK NULL
#define radsatMessage_DEFAULT NULL
#define radsatMessage_topic_FileTransferMessage_MSGTYPE fileTransferMessage
#define radsatMessage_topic_TelecommandMessage_MSGTYPE telecommandMessage

extern const pb_msgdesc_t radsatMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define radsatMessage_fields &radsatMessage_msg

/* Maximum encoded size of messages (where known) */
#define radsatMessage_size                       242

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
