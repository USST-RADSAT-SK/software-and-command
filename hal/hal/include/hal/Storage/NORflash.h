/*!
 * @file	NORflash.h
 * @brief
 * Contains the locations of the sectors in the NOR flash and the address of
 * information stored in the NOR flash.
 * Helper functions to initialize and test the NOR flash are also provided here.
 * @note IMPORTANT NOTE: NOR flash can be read like RAM but must be written using API calls.
 * Further, Atmel's write functions take address values relative to the base address of the flash.
 * Therefore, when reading add NOR_FLASH_BASE_ADDRESS to the addresses used while writing.
 *
 */

#ifndef NORFLASH_H_
#define NORFLASH_H_

#include <at91/memories/norflash/NorFlashCFI.h>
#include <at91/memories/norflash/NorFlashApi.h>
#include <at91/boards/ISIS_OBC_G20/board.h>

#define NORFLASH_SMALL_SECTOR_SIZE		8192
#define NORFLASH_LARGE_SECTOR_SIZE		65536

#define NOR_FLASH_BASE_ADDRESS	BOARD_NORFLASH_BASE_ADDRESS
#define NORFLASH_SA0_ADDRESS	0
#define NORFLASH_SA1_ADDRESS	(NORFLASH_SA0_ADDRESS + NORFLASH_SMALL_SECTOR_SIZE)
#define NORFLASH_SA2_ADDRESS	(NORFLASH_SA1_ADDRESS + NORFLASH_SMALL_SECTOR_SIZE)
#define NORFLASH_SA3_ADDRESS	(NORFLASH_SA2_ADDRESS + NORFLASH_SMALL_SECTOR_SIZE)
#define NORFLASH_SA4_ADDRESS	(NORFLASH_SA3_ADDRESS + NORFLASH_SMALL_SECTOR_SIZE)
#define NORFLASH_SA5_ADDRESS	(NORFLASH_SA4_ADDRESS + NORFLASH_SMALL_SECTOR_SIZE)
#define NORFLASH_SA6_ADDRESS	(NORFLASH_SA5_ADDRESS + NORFLASH_SMALL_SECTOR_SIZE)
#define NORFLASH_SA7_ADDRESS	(NORFLASH_SA6_ADDRESS + NORFLASH_SMALL_SECTOR_SIZE)
#define NORFLASH_SA8_ADDRESS	(NORFLASH_SA7_ADDRESS + NORFLASH_SMALL_SECTOR_SIZE)
#define NORFLASH_SA9_ADDRESS	(NORFLASH_SA8_ADDRESS + NORFLASH_LARGE_SECTOR_SIZE) // its a bottom-boot device with first 8 sectors of small size
#define NORFLASH_SA10_ADDRESS	(NORFLASH_SA9_ADDRESS + NORFLASH_LARGE_SECTOR_SIZE)
#define NORFLASH_SA11_ADDRESS	(NORFLASH_SA10_ADDRESS + NORFLASH_LARGE_SECTOR_SIZE)
#define NORFLASH_SA12_ADDRESS	(NORFLASH_SA11_ADDRESS + NORFLASH_LARGE_SECTOR_SIZE)
#define NORFLASH_SA13_ADDRESS	(NORFLASH_SA12_ADDRESS + NORFLASH_LARGE_SECTOR_SIZE)
#define NORFLASH_SA14_ADDRESS	(NORFLASH_SA13_ADDRESS + NORFLASH_LARGE_SECTOR_SIZE)
#define NORFLASH_SA15_ADDRESS	(NORFLASH_SA14_ADDRESS + NORFLASH_LARGE_SECTOR_SIZE)
#define NORFLASH_SA16_ADDRESS	(NORFLASH_SA15_ADDRESS + NORFLASH_LARGE_SECTOR_SIZE)
#define NORFLASH_SA17_ADDRESS	(NORFLASH_SA16_ADDRESS + NORFLASH_LARGE_SECTOR_SIZE)
#define NORFLASH_SA18_ADDRESS	(NORFLASH_SA17_ADDRESS + NORFLASH_LARGE_SECTOR_SIZE)
#define NORFLASH_SA19_ADDRESS	(NORFLASH_SA18_ADDRESS + NORFLASH_LARGE_SECTOR_SIZE)
#define NORFLASH_SA20_ADDRESS	(NORFLASH_SA19_ADDRESS + NORFLASH_LARGE_SECTOR_SIZE)
#define NORFLASH_SA21_ADDRESS	(NORFLASH_SA20_ADDRESS + NORFLASH_LARGE_SECTOR_SIZE)
#define NORFLASH_SA22_ADDRESS	(NORFLASH_SA21_ADDRESS + NORFLASH_LARGE_SECTOR_SIZE)

#define	MODE_STORAGE_SECTOR			NORFLASH_SA4_ADDRESS
#define PARAMETER_STORAGE_SECTOR	NORFLASH_SA5_ADDRESS
#define ERROR_LOG_FIRST_SECTOR		NORFLASH_SA6_ADDRESS
#define ERROR_LOG_SECOND_SECTOR		NORFLASH_SA7_ADDRESS

#define NORFLASH_TEST_SECTOR		NORFLASH_SA22_ADDRESS

struct NorFlash NORFlash;

/*!
 * @brief Initializes the NOR flash.
 * @return 0 on success, -1 otherwise.
 */
int NORflash_start(void);

/*!
 * @brief Tests the NOR flash by first erasing NORFLASH_TEST_SECTOR, writing data to it,
 * reading it back and checking if it matches.
 * @param testVal value that is written to the start of NORFLASH_TEST_SECTOR.
 * @return 0 on success, -1 otherwise.
 */
int NORflash_test(unsigned int testVal);

#endif /* NORFLASH_H_ */
