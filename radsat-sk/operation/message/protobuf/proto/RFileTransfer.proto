/* file: fileTransfer.proto
 * date: January 18 2021
 *
 * This proto file includes the raw definitions (using proto3 syntax) of
 * messages that are to be compiled into C structs using the protoc library.
 *
 * The messages defined in this file will be used for file transfers, which
 * focuses on the downlinked transmission of all data objects (images, telemetry
 * data, etc.) from the RADSAT-SK Satellite to the Ground Station on Earth.
 */

syntax = "proto3";

// top level File Transfer message object
message file_transfer_message {
	oneof message {
		obc_telemetry ObcTelemetry					= 1;
		transceiver_telemetry TransceiverTelemetry	= 2;
		camera_telemetry CameraTelemetry			= 3;
		eps_telemetry EpsTelemetry					= 4;
		battery_telemetry BatteryTelemetry			= 5;
		antenna_telemetry AntennaTelemetry			= 6;
		dosimeter_data DosimeterData				= 7;
		image_packet ImagePacket					= 8;
	}
}

// Information about the state of the OBC
message obc_telemetry {
	uint32 Mode				= 1;	///< Mode of operation at time of recording
	uint32 Uptime			= 2;	///< Uptime (in ticks) since last reset (of any kind)
	uint32 RtcTime			= 3;	///< RTC Time (in unix time; seconds since Unix Epoch)
	uint32 RtcTemperature	= 4;	///< 10bit Temperature recorded by OBC's RTC
}


// Telemetry for the Receiver
message receiver_telemetry {
	float RxDoppler					= 1; 	///< Rx Telemetry receiver doppler.
	float RxRssi					= 2; 	///< Rx Telemetry rssi measurement.
	float BusVoltage				= 3; 	///< Rx Telemetry bus voltage.
	float TotalCurrent				= 4; 	///< Tx Telemetry total current.
	float TxCurrent					= 5; 	///< Tx Telemetry transmitter current.
	float RxCurrent					= 6; 	///< Tx Telemetry receiver current.
	float PowerAmplifierCurrent		= 7; 	///< Tx Telemetry power amplifier current.
	float PowerAmplifierTemperature	= 8; 	///< Rx Telemetry power amplifier temperature
	float BoardTemperature			= 9; 	///< Rx Telemetry board temperature.
	uint32 Uptime					= 10;	///< Rx Uptime in Seconds.
	uint32 Frames					= 11;	///< Rx Frames currently in Receive Buffer.
}

// Telemetry for the Transmitter
message transmitter_telemetry {
	float ReflectedPower			= 1; 	///< Tx Telemetry reflected power.
	float ForwardPower				= 2; 	///< Tx Telemetry forward power.
	float BusVoltage				= 3; 	///< Tx Telemetry bus voltage.
	float TotalCurrent				= 4; 	///< Tx Telemetry total current.
	float TxCurrent					= 5; 	///< Tx Telemetry transmitter current.
	float RxCurrent					= 6; 	///< Tx Telemetry receiver current.
	float PowerAmplifierCurrent		= 7; 	///< Tx Telemetry power amplifier current.
	float PowerAmplifierTemperature	= 8; 	///< Tx Telemetry power amplifier temperature.
	float BoardTemperature			= 9; 	///< Tx Telemetry board temperature.
	uint32 Uptime					= 10;	///< Tx Uptime in Seconds.
}

// Information about the state of the Transceiver
message transceiver_telemetry {
	receiver_telemetry Receiver 		= 1;	///< Receiver Telemetry
	transmitter_telemetry Transmitter	= 2;	///< Transmitter Telemetry
}

// Information about the state of the Camera
message camera_telemetry {
	uint32 UpTime	= 1;	///< Local uptime (since last startup) in seconds
}

// Information about the state of the Electrical Power Supply
message eps_telemetry {

}

// Information about the state of the Battery
message battery_telemetry {

}

// Information about the state of the Antenna
message antenna_telemetry {

}

// Payload Data for a single Dosimeter board
message dosimeter_board_data {
	float ChannelZero	= 1;	///< COTS 2048mV REF IC, Shielding: none
	float ChannelOne		= 2;	///< COTS 2048mV REF IC, Shielding: 50 mil
	float ChannelTwo		= 3;	///< COTS 2048mV REF IC, Shielding: 100 mil
	float ChannelThree	= 4;	///< COTS 2048mV REF IC, Shielding: 200 mil
	float ChannelFour	= 5;	///< COTS 2048mV REF IC, Shielding: 20 mil
	float ChannelFive	= 6;	///< RADFET Experimental Dosimeter, Shielding: none
	float ChannelSix		= 7;	///< COTS 2048mV REF IC, Shielding: 300 mil
	float ChannelSeven	= 8;	///< Temperature Sensor
}

// Dosimeter Payload Data (both boards)
message dosimeter_data {
	dosimeter_board_data BoardOne	= 1;	///< Payload Data from the first Dosimeter Board ("bottom" of the Satellite, beneath OBC)
	dosimeter_board_data BoardTwo	= 2;	///< Payload Data from the second Dosimeter Board ("top" of the Satellite, beneath Antenna)
}

enum image_type_t {
	FullResolution		= 0;	///< 1024 x 1024 = 1MB
	HalfResolution		= 1;	///< 512  x 512  = 256kB
	QuarterResolution	= 2;	///< 256  x 256  = 64kB
	Thumbnail			= 3;	///< 64   x 64   = 4kB
}

// Image Packet
message image_packet {
	uint32 Id			= 1;	///< ID of the image
	image_type_t Type	= 2;	///< Size of the image
	bytes Data			= 3;	///< The raw image data
}
